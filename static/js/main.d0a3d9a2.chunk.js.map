{"version":3,"sources":["Components/Landing.jsx","Components/About.jsx","Components/Skills.jsx","Components/Work.jsx","Components/Education.jsx","Components/Contact.jsx","Components/NotFound.jsx","Router/Router.js","DataStubs/RouterStub.js","Components/LoadingSpinner.jsx","Components/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Landing","className","About","Skills","Work","Education","Contact","href","target","rel","NotFound","Router","exact","path","component","Routes","routeUrl","navLabel","LoadingSpinner","class","role","NavBar","Header","background","pad","fallback","map","index","to","key","App","Main","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0a3d9a2.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Landing = () => {\n  return (\n    <div className=\"p-4\">\n      <p>Howdy! Welcome to my Portfolio. My name is Rahul Kulkarni and i am a Javascript Engineer</p>\n      <p>This Portfolio is work in progress. :) </p>\n    </div>\n  );\n};\n\n","import React from 'react';\n\nexport const About = () => (\n  <div className=\"p-4\">\n    <h1>About me</h1>\n    <p>Javascript developer with recent experience as a front-end lead. I am passionate about writing good code and continue to explore new standards, features, and technology to improve the way I work.</p>\n  </div>\n);","import React from 'react';\n\nexport const Skills = () => (\n  <div className=\"p-4\">\n    <h1>Skills</h1>\n    <ul>\n      <li>\n        Javascript\n      </li>\n      <li>\n        ReactJs\n      </li>\n      <li>\n        Redux\n      </li>\n      <li>\n        Webpack\n      </li>\n      <li>\n        NodeJs\n      </li>\n      <li>\n        Jest\n      </li>\n      <li>\n        Enzyme\n      </li>\n      <li>\n        React Native\n      </li>\n    </ul>\n  </div>\n);","import React from 'react';\n\nexport const Work = () => (\n  <div className=\"p-4\">\n    <h1>Work History</h1>\n    <section>\n      <h3>Capgemini (AIG), Oct-2019 to Present</h3>\n      <h3>Anagh Tech (AIG), Aug-2017 to Oct-2019</h3>\n      <h4>Sr. Consultant. Houston, Tx</h4>\n      <ul>\n        <li>\n          Develop and maintain micro-sites and supporting repositories in react, redux.\n        </li>\n        <li>\n          Code review, govern coding standards, maintain branching strategies.\n        </li>\n        <li>\n          Support bi-weekly prod and non-prod deployments.\n        </li>\n        <li>\n          Groom features for team, and coordinate with offshore.\n        </li>\n        <li>\n          Collaborations with other teams inside the company and third parties.\n        </li>\n        <li>\n          Participate in Hackathons and Proof of Concept creations.\n        </li>\n      </ul>\n    </section>\n    <hr />\n    <section>\n      <h3>Anagh Tech (HPE/DXE), Nov-2016 to July 2017</h3>\n      <h4>Web Developer, Austin, Tx</h4>\n      <ul>\n        <li>\n          Worked on intranet sites using React-Redux and Grommet.\n        </li>\n        <li>\n          Played integral role on close knit team in showcasing agile capabilities to larger teams.\n        </li>\n        <li>\n          Implemented React/Unit testing coding standards.\n        </li>\n        <li>\n          Implemented Redux mock store, Webpack, Axios for api connections,\n        </li>\n        <li>\n          Collaborated with Dev-Ops for deployments.\n        </li>\n      </ul>\n    </section>\n    <hr />\n    <section>\n      <h3>Anagh Tech (Code & Theory), June-2016 to Sep 2016</h3>\n      <h4>Web Developer, New York, Ny</h4>\n      <ul>\n        <li>\n          Developed websites such as, New york life, Heritage.org and Consumer.com.\n        </li>\n        <li>\n          Created and delivered HTML/Sass prototypes for high-pressure deadlines.\n        </li>\n        <li>\n          Used Jquery for nylife, introduced to React and Es6\n        </li>\n        <li>\n          Experience with setting up Storybook, js animations libraries like Greensock.\n        </li>\n        <li>\n          Collaborated closely with design team for development.\n        </li>\n      </ul>\n    </section>\n    <hr />\n    <section>\n      <h3>Utis Technologies, Jun-2015 to May 2016</h3>\n      <h4>Software Developer, Piscataway, Nj</h4>\n      <ul>\n        <li>\n          Developed internal websites using AngularJs.\n        </li>\n        <li>\n          Developed HTML5/Sass based documentation dashboard.\n        </li>\n        <li>\n          Worked on various form implementations using JavaScript and Angular.\n        </li>\n      </ul>\n    </section>\n  </div>\n);","import React from 'react';\n\nexport const Education = () => (\n  <div className=\"p-4\">\n    <h1>ACADEMIC BACKGROUND</h1>\n    <section>\n      <h3>University of Massachusetts, Dartmouth</h3>\n      <h4>Masters in Computer Science, 2014</h4>\n      <ul>\n        <li>\n          Completed projects in Matlab and C++.\n        </li>\n        <li>\n          Worked as a webmaster for Umassd.edu and Indian student association.\n        </li>\n      </ul>\n    </section>\n    <hr />\n    <section>\n      <h3>University of Mumbai</h3>\n      <h4>Bachelor of Engineering in Computer Science, 2012</h4>\n      <ul>\n        <li>\n          Active member of Computer Science society.\n        </li>\n        <li>\n          Worked on airline booking management and analyzed intrusion detection mechanisms.\n        </li>\n        <li>\n          Member of student association for football and online gaming\n        </li>\n      </ul>\n    </section>\n  </div>\n);","import React from 'react';\n\nexport const Contact = () => (\n  <div className=\"p-4\">\n    <h3>Skills</h3>\n    <ul>\n      <li>\n        Mobile: 508-615-5736\n      </li>\n      <li>\n        Email: rahulkulkarni0510@gmail.com\n      </li>\n      <li>\n        LinkedIn: @rahul-kulkarni105\n        <a\n          href=\"https://www.linkedin.com/in/rahul-kulkarni105/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          LinkedIn Profile\n        </a>\n      </li>\n      <li>\n        GitHub: rahul-kulkarni105\n        <a\n          href=\"https://github.com/rahul-kulkarni105\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github Profile\n        </a>\n      </li>\n    </ul>\n  </div>\n);","import React from 'react';\n\nexport const NotFound = () => (\n  <p>Sorry this is not the page you are looking for. Try other link</p>\n);","import React from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Landing } from '../Components/Landing';\nimport { About } from '../Components/About';\nimport { Skills } from '../Components/Skills';\nimport { Work } from '../Components/Work';\nimport { Education } from '../Components/Education';\nimport { Contact } from '../Components/Contact';\nimport { NotFound } from '../Components/NotFound';\n\nexport const Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Landing} />\n      <Route path=\"/portfolio\" component={Landing} />\n      <Route exact path=\"/portfolio/\" component={Landing} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/skills\" component={Skills} />\n      <Route path=\"/work\" component={Work} />\n      <Route path=\"/education\" component={Education} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/\" component={NotFound} />\n    </Switch>\n  );\n}","export const Routes = [\n  {\n    routeUrl: 'portfolio',\n    navLabel: 'Home',\n  },\n  {\n    routeUrl: 'about',\n    navLabel: 'About',\n  },\n  {\n    routeUrl: 'skills',\n    navLabel: 'Skills',\n  },\n  {\n    routeUrl: 'work',\n    navLabel: 'Work',\n  },\n  {\n    routeUrl: 'education',\n    navLabel: 'Education',\n  },\n  {\n    routeUrl: 'contact',\n    navLabel: 'Contact',\n  },\n]","import React from 'react';\n\nexport const LoadingSpinner = () => (\n  <div class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n);","import React, { Suspense } from 'react';\nimport {\n  Header,\n} from 'grommet';\nimport {\n  Link,\n} from \"react-router-dom\";\nimport { Routes } from '../DataStubs/RouterStub';\nimport { LoadingSpinner } from './LoadingSpinner';\n\nexport const NavBar = () => (\n  <nav className=\"header-wrapper navbar-fixed-top\" role=\"navigation\">\n    <Header className=\"header-component col-sm-4 col-sm-12\" background=\"brand\" pad=\"medium\">\n      <Suspense fallback={()=> <LoadingSpinner />}>\n      {\n        Routes.map(({\n          routeUrl = '',\n          navLabel = '',\n        }, index) => (\n          <Link\n            className=\"nav-link\"\n            to={`/${routeUrl}`}\n            key={`link-navbar-${index}-${routeUrl}`}\n          >\n            {navLabel}\n          </Link>\n        ))\n      }\n      </Suspense>\n    </Header>\n  </nav>\n);","import React, { Suspense } from 'react';\nimport './Styles/App.css';\nimport {\n  BrowserRouter,\n} from \"react-router-dom\";\nimport {\n  Main,\n} from 'grommet';\nimport { Router } from './Router/Router';\nimport { NavBar } from './Components/NavBar';\nimport { LoadingSpinner } from './Components/LoadingSpinner';\n\nconst App = () => (\n  <BrowserRouter>\n    <Suspense fallback={()=> <LoadingSpinner />}>\n      <div className=\"container-fluid\">\n        <div className=\"app-wrapper row\">\n          <NavBar />\n          <hr />\n          <Main pad=\"large\">\n            <Router />\n          </Main>\n        </div>\n      </div>\n    </Suspense>\n  </BrowserRouter>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}